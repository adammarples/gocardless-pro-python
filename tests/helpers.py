# WARNING: Do not edit by hand, this file was generated by Crank:
#
#   https://github.com/gocardless/crank
#

import os
import re
import json

import responses

from contextlib import contextmanager

import gocardless_pro

def load_fixture(resource):
    fixtures_path = os.path.join(os.path.dirname(__file__), 'fixtures')
    fixture_filename = '{0}.json'.format(resource)
    fixture_path = os.path.join(fixtures_path, fixture_filename)
    return json.load(open(fixture_path))

def stub_response(resource_fixture):
    path = re.sub(r':(\w+)', r'\w+', resource_fixture['path_template'])
    url_pattern = re.compile('http://example.com' + path)
    json_body = json.dumps(resource_fixture['body'])
    responses.add(resource_fixture['method'], url_pattern, body=json_body)

@contextmanager
def stub_timeout_then_response(resource_fixture):
    path = re.sub(r':(\w+)', r'\w+', resource_fixture['path_template'])
    url_pattern = re.compile('http://example.com' + path)
    json_body = json.dumps(resource_fixture['body'])
    try:
      with responses.RequestsMock(assert_all_requests_are_fired=True) as rsps:
        rsps.add(resource_fixture['method'], url_pattern, status=408)
        rsps.add(resource_fixture['method'], url_pattern, body=json_body)
        yield rsps
    except AssertionError as e:
      message = e.args[0]
      if 'Not all requests have been executed' == message[:35]:
        raise AssertionError("Expected {} to have been tried more than once".format(message[35:]))
      else:
        raise e

@contextmanager
def stub_502_then_response(resource_fixture):
    path = re.sub(r':(\w+)', r'\w+', resource_fixture['path_template'])
    url_pattern = re.compile('http://example.com' + path)
    json_body = json.dumps(resource_fixture['body'])
    try:
      with responses.RequestsMock(assert_all_requests_are_fired=True) as rsps:
        rsps.add(resource_fixture['method'], url_pattern, status=502,
                 content_type='text/html',
                 body='<html><body>Response from Cloudflare</body></html>')
        rsps.add(resource_fixture['method'], url_pattern, body=json_body)
        yield rsps
    except AssertionError as e:
      message = e.args[0]
      if 'Not all requests have been executed' == message[:35]:
        raise AssertionError("Expected {} to have been tried more than once".format(message[35:]))
      else:
        raise e

client = gocardless_pro.Client(access_token='secret', base_url='http://example.com')
